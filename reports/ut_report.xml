<testExecutions version="1">
<<<<<<< HEAD
  <file path="src/app/applicant/applicant.service.spec.ts">
    <testCase name="Service: Applicant should ..." duration="24"/>
  </file>
  <file path="src/app/profile/profile-create/profile-create.component.spec.ts">
    <testCase name="ProfileCreateComponent should return form inValid" duration="32"/>
    <testCase name="ProfileCreateComponent should return form inValid min lenght value" duration="9"/>
    <testCase name="ProfileCreateComponent should call createProfile createProfile and return response success" duration="10"/>
    <testCase name="ProfileCreateComponent createProfile test" duration="10"/>
    <testCase name="ProfileCreateComponent should create" duration="7"/>
    <testCase name="ProfileCreateComponent should return form Valid" duration="7"/>
  </file>
  <file path="src/app/login/dialogtypesignup/dialogtypesignup.component.spec.ts">
    <testCase name="DialogtypesignupComponent navigate to signup company page" duration="33"/>
    <testCase name="DialogtypesignupComponent navigate to signup applicant page" duration="7"/>
    <testCase name="DialogtypesignupComponent should create" duration="6"/>
  </file>
  <file path="src/app/banco-preguntas/banco-preguntas-create/banco-preguntas-create.component.spec.ts">
    <testCase name="BancoPreguntasCreateComponent should return form Valid" duration="20"/>
    <testCase name="BancoPreguntasCreateComponent should return form inValid" duration="7"/>
    <testCase name="BancoPreguntasCreateComponent should call cancelCreation and reset the form" duration="7"/>
    <testCase name="BancoPreguntasCreateComponent should call ngOnInit bancoPreguntasId is null" duration="6"/>
    <testCase name="BancoPreguntasCreateComponent should call getListaCategorias getCategorias and return response success" duration="8"/>
    <testCase name="BancoPreguntasCreateComponent should call ngOnInit bancoPreguntasId is not null" duration="10"/>
    <testCase name="BancoPreguntasCreateComponent should return form inValid min lenght value" duration="6"/>
    <testCase name="BancoPreguntasCreateComponent should create" duration="9"/>
    <testCase name="BancoPreguntasCreateComponent createBancoPreguntas test" duration="7"/>
    <testCase name="BancoPreguntasCreateComponent should call createBancoPreguntas createBancoPreguntas and return response success" duration="11"/>
    <testCase name="BancoPreguntasCreateComponent should all fields empty" duration="6"/>
  </file>
  <file path="src/app/project/project.service.spec.ts">
    <testCase name="Service: Project should update a project" duration="2"/>
    <testCase name="Service: Project should ..." duration="2"/>
    <testCase name="Service: Project should be created" duration="1"/>
    <testCase name="Service: Project should get all projects" duration="2"/>
    <testCase name="Service: Project should create a project" duration="2"/>
    <testCase name="Service: Project should handle HTTP errors when creating a project" duration="2"/>
  </file>
  <file path="src/app/agendapruebas/agenda-pruebas-list/agenda-pruebas-list.component.spec.ts">
    <testCase name="AgendaPruebasListComponent should call getListaPreguntas getListaAgendaPrueba and return response success" duration="9"/>
    <testCase name="AgendaPruebasListComponent should create" duration="4"/>
  </file>
  <file path="src/app/evaluacion-desempeno/evaluacion-desempeno-create/evaluacion-desempeno-create.component.spec.ts">
    <testCase name="EvaluacionDesempenoCreateComponent should call createAgendaPrueba agendaPruebaForm is null" duration="29"/>
    <testCase name="EvaluacionDesempenoCreateComponent should call createAgendaPrueba saveListaAgendaPrueba and return response success" duration="13"/>
    <testCase name="EvaluacionDesempenoCreateComponent should call ngOnInit and call the service getAgendaPrueba" duration="12"/>
    <testCase name="EvaluacionDesempenoCreateComponent should return form inValid" duration="20"/>
    <testCase name="EvaluacionDesempenoCreateComponent should return form Valid" duration="11"/>
    <testCase name="EvaluacionDesempenoCreateComponent should call getListaCandidatos and return response success" duration="14"/>
    <testCase name="EvaluacionDesempenoCreateComponent should create" duration="17"/>
    <testCase name="EvaluacionDesempenoCreateComponent should call getListaPruebas getListaPruebas and return response success" duration="19"/>
  </file>
  <file path="src/app/login/login-page/login-page.component.spec.ts">
    <testCase name="LoginPageComponent password empty" duration="16"/>
    <testCase name="LoginPageComponent should call gotoApp loginCompany and return response failed" duration="10"/>
    <testCase name="LoginPageComponent change english language" duration="8"/>
    <testCase name="LoginPageComponent should call gotoApp loginCompany and return response success" duration="12"/>
    <testCase name="LoginPageComponent should call gotoApp loginApplicant and return response success" duration="14"/>
    <testCase name="LoginPageComponent email empty" duration="8"/>
    <testCase name="LoginPageComponent test english button" duration="8"/>
    <testCase name="LoginPageComponent should call open dialog and return a result" duration="8"/>
    <testCase name="LoginPageComponent go to open dialog" duration="8"/>
    <testCase name="LoginPageComponent go to app test" duration="8"/>
    <testCase name="LoginPageComponent should call selectChangeHandler and change value of select 1" duration="16"/>
    <testCase name="LoginPageComponent should return form inValid" duration="9"/>
    <testCase name="LoginPageComponent test spanish button" duration="7"/>
    <testCase name="LoginPageComponent two fields empty" duration="8"/>
    <testCase name="LoginPageComponent should create" duration="9"/>
    <testCase name="LoginPageComponent should call gotoApp loginApplicant and return response failed" duration="8"/>
    <testCase name="LoginPageComponent change not language" duration="7"/>
    <testCase name="LoginPageComponent should call selectChangeHandler and change value of select 2" duration="7"/>
    <testCase name="LoginPageComponent should return form Valid" duration="8"/>
    <testCase name="LoginPageComponent change spanish language" duration="7"/>
  </file>
  <file path="src/app/project/project-create/project-create.component.spec.ts">
    <testCase name="ProjectCreateComponent should create" duration="9"/>
    <testCase name="ProjectCreateComponent should not call createProject when form is valid" duration="6"/>
    <testCase name="ProjectCreateComponent should check if form is valid" duration="6"/>
    <testCase name="ProjectCreateComponent should check if form is invalid" duration="7"/>
    <testCase name="ProjectCreateComponent should initialize the projectForm" duration="8"/>
    <testCase name="ProjectCreateComponent should not call createProject when form is invalid" duration="5"/>
  </file>
  <file path="src/app/profile/profile.service.spec.ts">
    <testCase name="Service: Profile should ..." duration="1"/>
  </file>
  <file path="src/app/agendapruebas/agenda-pruebas-create/agenda-pruebas-create.component.spec.ts">
    <testCase name="AgendaPruebasCreateComponent should call ngOnInit and call the service getAgendaPrueba" duration="15"/>
    <testCase name="AgendaPruebasCreateComponent should call createAgendaPrueba agendaPruebaForm is null" duration="10"/>
    <testCase name="AgendaPruebasCreateComponent should call getListaCandidatos getListaCandidatos and return response success" duration="9"/>
    <testCase name="AgendaPruebasCreateComponent should call createAgendaPrueba saveListaAgendaPrueba and return response success" duration="9"/>
    <testCase name="AgendaPruebasCreateComponent should call getListaPruebas getListaPruebas and return response success" duration="11"/>
    <testCase name="AgendaPruebasCreateComponent all fields empty" duration="8"/>
    <testCase name="AgendaPruebasCreateComponent should return form inValid" duration="10"/>
    <testCase name="AgendaPruebasCreateComponent should return form Valid" duration="9"/>
    <testCase name="AgendaPruebasCreateComponent should create" duration="8"/>
  </file>
  <file path="src/app/conjunto-pruebas/conjunto-pruebas-list/conjunto-pruebas-list.component.spec.ts">
    <testCase name="ConjuntoPruebasListComponent should create" duration="3"/>
  </file>
  <file path="src/app/login/logout-page/logout-page.component.spec.ts">
    <testCase name="LogoutPageComponent should create" duration="6"/>
    <testCase name="LogoutPageComponent should " duration="4"/>
  </file>
  <file path="src/app/evaluacion-desempeno/evaluacion-desempeno-list/evaluacion-desempeno-list.component.spec.ts">
    <testCase name="EvaluacionDesempenoListComponent should create" duration="9"/>
    <testCase name="EvaluacionDesempenoListComponent should call getListaPreguntas getListaAgendaPrueba and return response success" duration="4"/>
  </file>
  <file path="src/app/interceptors/interceptor-errors.service.spec.ts">
    <testCase name="InterceptorsServiceService should be created" duration="2"/>
    <testCase name="InterceptorsServiceService should not add Authorization header if API_TOKEN is not present" duration="1"/>
    <testCase name="InterceptorsServiceService should add Authorization header with token if API_TOKEN is present" duration="2"/>
  </file>
  <file path="src/app/team/team.service.spec.ts">
    <testCase name="Service: TeamService should handle getAllAssignTeam successful HTTP request (status code 200)" duration="2"/>
    <testCase name="Service: TeamService should handle createAssignTeam failed HTTP request (status code 404)" duration="1"/>
    <testCase name="Service: TeamService should handle createAssignTeam successful HTTP request (status code 200)" duration="1"/>
    <testCase name="Service: TeamService should get teams by project" duration="1"/>
    <testCase name="Service: TeamService should update a team" duration="1"/>
    <testCase name="Service: TeamService should delete a team" duration="1"/>
    <testCase name="Service: TeamService should get a list of teams" duration="1"/>
    <testCase name="Service: TeamService should handle deleteAssignTeam successful HTTP request (status code 204)" duration="1"/>
    <testCase name="Service: TeamService should create a team" duration="1"/>
    <testCase name="Service: TeamService should handle deleteAssignTeam failed HTTP request (status code 404)" duration="2"/>
    <testCase name="Service: TeamService should handle getAllAssignTeam failed HTTP request (status code 404)" duration="1"/>
    <testCase name="Service: TeamService should be created" duration="1"/>
  </file>
  <file path="src/app/login/login.service.spec.ts">
    <testCase name="Service: Login should ..." duration="2"/>
    <testCase name="Service: Login should handle loginApplicant failed HTTP request (status code 404)" duration="1"/>
    <testCase name="Service: Login should handle loginCompany successful HTTP request (status code 200)" duration="1"/>
    <testCase name="Service: Login should handle loginApplicant successful HTTP request (status code 200)" duration="1"/>
    <testCase name="Service: Login should handle loginCompany failed HTTP request (status code 404)" duration="1"/>
  </file>
  <file path="src/app/evaluacion-desempeno/resultados-pruebas-create/resultados-pruebas-create.component.spec.ts">
    <testCase name="ResultadosPruebasCreateComponent should call setRespuesta and return response success" duration="12"/>
    <testCase name="ResultadosPruebasCreateComponent should call ngOnInit and call the service getAgendaPrueba" duration="4"/>
    <testCase name="ResultadosPruebasCreateComponent should create" duration="4"/>
    <testCase name="ResultadosPruebasCreateComponent should call getPrueba and return response success" duration="5"/>
    <testCase name="ResultadosPruebasCreateComponent should call getPrueba " duration="5"/>
    <testCase name="ResultadosPruebasCreateComponent should call getCandidato and return response success" duration="4"/>
  </file>
  <file path="src/app/principal/principal-page/principal-page.component.spec.ts">
    <testCase name="PrincipalPageComponent should create" duration="3"/>
  </file>
  <file path="src/app/signup/signup.service.spec.ts">
    <testCase name="Service: Signup should handle createApplicant successful HTTP request (status code 200)" duration="2"/>
    <testCase name="Service: Signup should ..." duration="1"/>
    <testCase name="Service: Signup should handle createCompany failed HTTP request (status code 404)" duration="1"/>
    <testCase name="Service: Signup should handle createApplicant failed HTTP request (status code 404)" duration="1"/>
    <testCase name="Service: Signup should handle createCompany successful HTTP request (status code 200)" duration="1"/>
  </file>
  <file path="src/app/interceptors/interceptor-errors.service.spec.ts">
    <testCase name="InterceptorsServiceService should intercept and handle server-side error" duration="4"/>
    <testCase name="InterceptorsServiceService should intercept and handle client-side error" duration="1"/>
    <testCase name="InterceptorsServiceService should be created" duration="1"/>
  </file>
  <file path="src/app/company/company-edit/company-edit.component.spec.ts">
    <testCase name="CompanyEditComponent should update selectedtypeNIT on selectChangeHandler" duration="13"/>
    <testCase name="CompanyEditComponent should initialize companyRForm" duration="7"/>
    <testCase name="CompanyEditComponent should update form data when a new company is received" duration="6"/>
    <testCase name="CompanyEditComponent should set selectedtypeNIT on selectChangeHandler" duration="6"/>
    <testCase name="CompanyEditComponent should create" duration="6"/>
  </file>
  <file path="src/app/banco-preguntas/lista-preguntas/lista-preguntas-list.component.spec.ts">
    <testCase name="ListaPreguntasListComponent should call getListaPreguntasBanco with bancoPreguntas null or empty" duration="4"/>
    <testCase name="ListaPreguntasListComponent should call getListaPreguntasBanco getListaPreguntasBanco and return response success" duration="6"/>
    <testCase name="ListaPreguntasListComponent should call modificarRespuesta respuesta is undefined" duration="4"/>
    <testCase name="ListaPreguntasListComponent should call agregarPregunta textoPregunta is undefined" duration="4"/>
    <testCase name="ListaPreguntasListComponent should call agregarPregunta and open dialog and return a result" duration="4"/>
    <testCase name="ListaPreguntasListComponent should call modificarRespuesta and open dialog and return a result" duration="4"/>
    <testCase name="ListaPreguntasListComponent should call agregarRespuesta respuesta is not undefined" duration="5"/>
    <testCase name="ListaPreguntasListComponent should call agregarRespuesta respuesta is undefined" duration="5"/>
    <testCase name="ListaPreguntasListComponent test button add" duration="5"/>
    <testCase name="ListaPreguntasListComponent should create" duration="3"/>
    <testCase name="ListaPreguntasListComponent should call modificarRespuesta respuesta is not undefined" duration="3"/>
    <testCase name="ListaPreguntasListComponent should call agregarRespuesta and open dialog and return a result" duration="4"/>
    <testCase name="ListaPreguntasListComponent should call agregarPregunta textoPregunta is not undefined" duration="4"/>
  </file>
  <file path="src/app/team/team-list/team-list.component.spec.ts">
    <testCase name="TeamListComponent should create" duration="12"/>
    <testCase name="TeamListComponent should call the method onProjectSelectionChange teamForm get project property null" duration="7"/>
    <testCase name="TeamListComponent should call getTeamsByProject when a project is selected" duration="11"/>
    <testCase name="TeamListComponent should clear the teams when no project is selected" duration="9"/>
    <testCase name="TeamListComponent should call getTeamsById when a team is selected" duration="21"/>
  </file>
  <file path="src/app/banco-preguntas/banco-preguntas.service.spec.ts">
    <testCase name="Service: BancoPreguntas should handle createBancoPreguntas successful HTTP request (status code 200)" duration="1"/>
    <testCase name="Service: BancoPreguntas should handle getBancoPreguntas successful HTTP request (status code 200)" duration="1"/>
    <testCase name="Service: BancoPreguntas should handle createBancoPreguntas failed HTTP request (status code 404)" duration="1"/>
    <testCase name="Service: BancoPreguntas should handle createPregunta successful HTTP request (status code 200)" duration="1"/>
    <testCase name="Service: BancoPreguntas should handle getBancoPreguntas failed HTTP request (status code 404)" duration="1"/>
    <testCase name="Service: BancoPreguntas should have bancoPreguntasCreated status true" duration="1"/>
    <testCase name="Service: BancoPreguntas should handle getCategorias failed HTTP request (status code 404)" duration="1"/>
    <testCase name="Service: BancoPreguntas should ..." duration="1"/>
    <testCase name="Service: BancoPreguntas should handle createPregunta failed HTTP request (status code 404)" duration="1"/>
    <testCase name="Service: BancoPreguntas should handle getListaPruebas failed HTTP request (status code 404)" duration="1"/>
    <testCase name="Service: BancoPreguntas should handle getListaBancosPreguntas failed HTTP request (status code 404)" duration="1"/>
    <testCase name="Service: BancoPreguntas should handle getListaPruebas successful HTTP request (status code 200)" duration="2"/>
    <testCase name="Service: BancoPreguntas should handle getListaPreguntasBanco successful HTTP request (status code 200)" duration="1"/>
    <testCase name="Service: BancoPreguntas should handle getListaBancosPreguntas successful HTTP request (status code 200)" duration="1"/>
    <testCase name="Service: BancoPreguntas should handle createRespuesta failed HTTP request (status code 404)" duration="1"/>
    <testCase name="Service: BancoPreguntas should handle getCategorias successful HTTP request (status code 200)" duration="1"/>
    <testCase name="Service: BancoPreguntas should handle createRespuesta successful HTTP request (status code 200)" duration="1"/>
    <testCase name="Service: BancoPreguntas should handle getListaPreguntasBanco failed HTTP request (status code 404)" duration="1"/>
  </file>
  <file path="src/app/team/team-create/team-create.component.spec.ts">
    <testCase name="TeamCreateComponent should create" duration="15"/>
  </file>
  <file path="src/app/company/company.service.spec.ts">
    <testCase name="CompanyService should send a GET request to get the company" duration="5"/>
    <testCase name="CompanyService should send a POST request to edit the company" duration="2"/>
    <testCase name="CompanyService should send a POST request to create the company" duration="1"/>
    <testCase name="CompanyService should be created" duration="1"/>
  </file>
  <file path="src/app/team/team-assign/team-assign.component.spec.ts">
    <testCase name="TeamAssignComponent should call deleteRow and change validatelenght variable to true" duration="13"/>
    <testCase name="TeamAssignComponent test call assign applicants button" duration="10"/>
    <testCase name="TeamAssignComponent should call deleteRow and change validatelenght variable to false" duration="9"/>
    <testCase name="TeamAssignComponent test call add to table button" duration="12"/>
    <testCase name="TeamAssignComponent should populate dataSource and dataSourceSave when teamsAssign has data" duration="10"/>
    <testCase name="TeamAssignComponent should create" duration="9"/>
    <testCase name="TeamAssignComponent should call deleteRecord show error message when dataSource has only one item" duration="14"/>
    <testCase name="TeamAssignComponent should call deleteRecord with a datasourceSave empty" duration="8"/>
    <testCase name="TeamAssignComponent should call deleteRow and delete the row selected" duration="11"/>
    <testCase name="TeamAssignComponent should not add applicant to table when selectedApplicant is falsy" duration="10"/>
    <testCase name="TeamAssignComponent should not update validateLength when dataSource is empty" duration="9"/>
    <testCase name="TeamAssignComponent should call deleteRecord with datasourceSave fill and datasource length > 1" duration="9"/>
    <testCase name="TeamAssignComponent should call getApplicants getApplicant and return response success" duration="13"/>
    <testCase name="TeamAssignComponent should add applicant to table when selectedApplicant is truthy and not in dataSource" duration="9"/>
    <testCase name="TeamAssignComponent should not add applicant to table when selectedApplicant is already in dataSource" duration="10"/>
    <testCase name="TeamAssignComponent should update validateLength when dataSource is not empty" duration="10"/>
    <testCase name="TeamAssignComponent should call deleteRow with a row not exists in the datasource" duration="10"/>
  </file>
  <file path="src/app/signup/signup-company/signup-company.component.spec.ts">
    <testCase name="SignupCompanyComponent should call selectChangeHandler and change value of select NIT" duration="35"/>
    <testCase name="SignupCompanyComponent email empty" duration="16"/>
    <testCase name="SignupCompanyComponent all fields empty" duration="12"/>
    <testCase name="SignupCompanyComponent should return form inValid" duration="14"/>
    <testCase name="SignupCompanyComponent should return form Valid" duration="15"/>
    <testCase name="SignupCompanyComponent should call registerCompany createCompany and return response failed" duration="18"/>
    <testCase name="SignupCompanyComponent should call registerCompany createCompany and return response success" duration="21"/>
    <testCase name="SignupCompanyComponent should open dialog success and return response" duration="13"/>
    <testCase name="SignupCompanyComponent should create" duration="12"/>
    <testCase name="SignupCompanyComponent should open dialog failed and return response" duration="12"/>
    <testCase name="SignupCompanyComponent registerCompany test" duration="15"/>
    <testCase name="SignupCompanyComponent go to open dialog failed" duration="16"/>
    <testCase name="SignupCompanyComponent password empty" duration="14"/>
    <testCase name="SignupCompanyComponent go to open dialog success" duration="12"/>
  </file>
  <file path="src/app/applicant-search/applicant-search-get/applicant-search-get.component.spec.ts">
    <testCase name="ApplicantSearchGetComponent should initialize with empty selectedApplicants array" duration="9"/>
    <testCase name="ApplicantSearchGetComponent should load applicants and set showApplicantInfo to true" duration="5"/>
    <testCase name="ApplicantSearchGetComponent should create" duration="4"/>
    <testCase name="ApplicantSearchGetComponent should call showApplicantDetails() when the &quot;Search Applicant&quot; button is clicked" duration="5"/>
    <testCase name="ApplicantSearchGetComponent should toggle selection of an applicant" duration="4"/>
  </file>
  <file path="src/app/evaluacion-desempeno/evaluacion-desempeno.service.spec.ts">
    <testCase name="Service: EvaluacionDesempeno should ..." duration="1"/>
  </file>
  <file path="src/app/signup/dialogalertopcomp/dialogalertopcomp.component.spec.ts">
    <testCase name="DialogalertopcompComponent should create" duration="5"/>
    <testCase name="DialogalertopcompComponent navigate to login page dialog 1 success" duration="7"/>
    <testCase name="DialogalertopcompComponent navigate to login page dialog 2 failed" duration="6"/>
  </file>
  <file path="src/app/agendapruebas/agenda-prueba.service.spec.ts">
    <testCase name="Service: AgendaPrueba should handle getListaCandidatos successful HTTP request (status code 200)" duration="2"/>
    <testCase name="Service: AgendaPrueba should handle saveListaAgendaPrueba failed HTTP request (status code 404)" duration="2"/>
    <testCase name="Service: AgendaPrueba should handle getListaAgendaPrueba failed HTTP request (status code 404)" duration="2"/>
    <testCase name="Service: AgendaPrueba should handle getListaCandidatos failed HTTP request (status code 404)" duration="1"/>
    <testCase name="Service: AgendaPrueba should handle getListaAgendaPrueba successful HTTP request (status code 200)" duration="1"/>
    <testCase name="Service: AgendaPrueba should ..." duration="1"/>
    <testCase name="Service: AgendaPrueba should handle saveListaAgendaPrueba successful HTTP request (status code 200)" duration="1"/>
    <testCase name="Service: AgendaPrueba should handle getAgendaPrueba failed HTTP request (status code 404)" duration="1"/>
    <testCase name="Service: AgendaPrueba should handle getAgendaPrueba successful HTTP request (status code 200)" duration="1"/>
  </file>
  <file path="src/app/evaluacion-desempeno/resultados-pruebas-create/resultados-pruebas-create.component.spec.ts">
    <testCase name="ResultadosPruebasCreateComponent should call getCandidato and return response success" duration="8"/>
    <testCase name="ResultadosPruebasCreateComponent should call getPrueba and return response success" duration="4"/>
    <testCase name="ResultadosPruebasCreateComponent should call setRespuesta and return response success" duration="5"/>
    <testCase name="ResultadosPruebasCreateComponent should call setRespuesta and return response failed by nulls" duration="7"/>
    <testCase name="ResultadosPruebasCreateComponent should call ngOnInit and call the service getAgendaPrueba" duration="5"/>
    <testCase name="ResultadosPruebasCreateComponent should create" duration="5"/>
  </file>
  <file path="src/app/conjunto-pruebas/conjunto-pruebas.service.spec.ts">
    <testCase name="ConjuntoPruebasService should handle createConjuntoPruebas failed HTTP request (status code 404)" duration="3"/>
    <testCase name="ConjuntoPruebasService should create a conjuntoPruebas" duration="1"/>
    <testCase name="ConjuntoPruebasService should return all bancoPreguntas" duration="2"/>
    <testCase name="ConjuntoPruebasService should handle createConjuntoPruebas successful HTTP request (status code 200)" duration="1"/>
    <testCase name="ConjuntoPruebasService should be created" duration="1"/>
  </file>
  <file path="src/app/applicant-search/applicant-seach.service.spec.ts">
    <testCase name="Service: ApplicantSeach should ..." duration="2"/>
  </file>
  <file path="src/app/app.component.spec.ts">
    <testCase name="AppComponent navigate to root" duration="12"/>
    <testCase name="AppComponent navigate to login page" duration="4"/>
    <testCase name="AppComponent navigate to signup applicant page" duration="12"/>
    <testCase name="AppComponent navigate to signup company page" duration="8"/>
    <testCase name="AppComponent navigate to principal page" duration="11"/>
    <testCase name="AppComponent should create the app" duration="3"/>
    <testCase name="AppComponent test english button" duration="30"/>
    <testCase name="AppComponent should have as title 'frontabc-front'" duration="4"/>
    <testCase name="AppComponent change not language" duration="4"/>
    <testCase name="AppComponent change spanish language" duration="5"/>
    <testCase name="AppComponent should contain router-outlet" duration="5"/>
    <testCase name="AppComponent should navigate to principal page without token and return to login page" duration="6"/>
    <testCase name="AppComponent change english language" duration="7"/>
    <testCase name="AppComponent test spanish button" duration="21"/>
  </file>
  <file path="src/app/banco-preguntas/modal-respuestas-save/modal-respuestas-save.component.spec.ts">
    <testCase name="ModalRespuestasSaveComponent should return form inValid" duration="11"/>
    <testCase name="ModalRespuestasSaveComponent should return form Valid" duration="6"/>
    <testCase name="ModalRespuestasSaveComponent should create" duration="6"/>
    <testCase name="ModalRespuestasSaveComponent should call retornarRespuesta respuesta not undefined" duration="7"/>
    <testCase name="ModalRespuestasSaveComponent should call retornarRespuesta respuesta undefined" duration="6"/>
    <testCase name="ModalRespuestasSaveComponent should close the dialog when onNoClick() is called" duration="6"/>
    <testCase name="ModalRespuestasSaveComponent should return form inValid null values" duration="8"/>
    <testCase name="ModalRespuestasSaveComponent all fields empty" duration="6"/>
  </file>
  <file path="src/app/banco-preguntas/modal-preguntas-save/modal-preguntas-save.component.spec.ts">
    <testCase name="ModalPreguntasSaveComponent should return form inValid" duration="7"/>
    <testCase name="ModalPreguntasSaveComponent should return form Valid" duration="8"/>
    <testCase name="ModalPreguntasSaveComponent should create" duration="7"/>
    <testCase name="ModalPreguntasSaveComponent should close the dialog when onNoClick() is called" duration="7"/>
    <testCase name="ModalPreguntasSaveComponent should call createPregunta createPregunta and return response success" duration="7"/>
    <testCase name="ModalPreguntasSaveComponent test call cancel button" duration="7"/>
  </file>
  <file path="src/app/project/project-list/project-list.component.spec.ts">
    <testCase name="ProjectListComponent should call the method toggleEdit with the project.editable property true" duration="5"/>
    <testCase name="ProjectListComponent should create" duration="4"/>
    <testCase name="ProjectListComponent should call the method toggleEdit with the project.editable property false" duration="6"/>
  </file>
  <file path="src/app/banco-preguntas/banco-preguntas-list/banco-preguntas-list.component.spec.ts">
    <testCase name="BancoPreguntasListComponent should call getListaPreguntas getListaBancosPreguntas with idCategoriaSeleccionada null" duration="10"/>
    <testCase name="BancoPreguntasListComponent should call getListaPreguntas getListaBancosPreguntas and return response success html" duration="5"/>
    <testCase name="BancoPreguntasListComponent should call categoriaSeleccionada and fill the value nombreCategoriaSeleccionada html" duration="3"/>
    <testCase name="BancoPreguntasListComponent should call getListaPreguntas getListaBancosPreguntas and return response success" duration="4"/>
    <testCase name="BancoPreguntasListComponent should create" duration="3"/>
    <testCase name="BancoPreguntasListComponent should call categoriaSeleccionada and fill the value nombreCategoriaSeleccionada" duration="4"/>
  </file>
  <file path="src/app/signup/signup-applicant/signup-applicant.component.spec.ts">
    <testCase name="SignupApplicantComponent go to open dialog failed" duration="16"/>
    <testCase name="SignupApplicantComponent should open dialog success and return response" duration="13"/>
    <testCase name="SignupApplicantComponent should return form Valid" duration="19"/>
    <testCase name="SignupApplicantComponent should call selectChangeHandler and change value of select C.E." duration="24"/>
    <testCase name="SignupApplicantComponent go to open dialog success" duration="14"/>
    <testCase name="SignupApplicantComponent registerApplicant test" duration="15"/>
    <testCase name="SignupApplicantComponent should call selectChangeHandler and change value of select C.C." duration="19"/>
    <testCase name="SignupApplicantComponent email empty" duration="21"/>
    <testCase name="SignupApplicantComponent should call registerApplicant createApplicant and return response failed" duration="20"/>
    <testCase name="SignupApplicantComponent password empty" duration="14"/>
    <testCase name="SignupApplicantComponent should open dialog failed and return response" duration="12"/>
    <testCase name="SignupApplicantComponent should return form inValid" duration="14"/>
    <testCase name="SignupApplicantComponent should call registerApplicant createApplicant and return response success" duration="22"/>
    <testCase name="SignupApplicantComponent should create" duration="13"/>
    <testCase name="SignupApplicantComponent all fields empty" duration="12"/>
  </file>
  <file path="src/app/signup/dialogalertopappli/dialogalertopappli.component.spec.ts">
    <testCase name="DialogalertopappliComponent navigate to login page dialog 1 success" duration="5"/>
    <testCase name="DialogalertopappliComponent navigate to login page dialog 2 failed" duration="5"/>
    <testCase name="DialogalertopappliComponent should create" duration="3"/>
  </file>
  <file path="src/app/banco-preguntas/categorias-list/categorias-list.component.spec.ts">
    <testCase name="CategoriasListComponent should call getListaCategorias getCategorias and return response success html" duration="4"/>
    <testCase name="CategoriasListComponent should set idCategoriaSeleccionada and emit categoriaSeleccionada event" duration="4"/>
    <testCase name="CategoriasListComponent should create" duration="3"/>
    <testCase name="CategoriasListComponent should call getListaCategorias getCategorias and return response success" duration="3"/>
  </file>
  <file path="src/app/applicant/applicant-edit/applicant-edit.component.spec.ts">
    <testCase name="ApplicantEditComponent should create" duration="23"/>
=======
  <file path="src/app/interceptors/interceptor-errors.service.spec.ts">
    <testCase name="InterceptorsServiceService should add Authorization header with token if API_TOKEN is present" duration="26"/>
    <testCase name="InterceptorsServiceService should be created" duration="3"/>
    <testCase name="InterceptorsServiceService should not add Authorization header if API_TOKEN is not present" duration="2"/>
  </file>
  <file path="src/app/evaluacion-desempeno/evaluacion-desempeno.service.spec.ts">
    <testCase name="Service: EvaluacionDesempeno should ..." duration="3"/>
  </file>
  <file path="src/app/team/team-assign/team-assign.component.spec.ts">
    <testCase name="TeamAssignComponent should not update validateLength when dataSource is empty" duration="47"/>
    <testCase name="TeamAssignComponent should update validateLength when dataSource is not empty" duration="20"/>
    <testCase name="TeamAssignComponent should call deleteRecord with datasourceSave fill and datasource length > 1" duration="15"/>
    <testCase name="TeamAssignComponent should add applicant to table when selectedApplicant is truthy and not in dataSource" duration="15"/>
    <testCase name="TeamAssignComponent should call deleteRecord with a datasourceSave empty" duration="12"/>
    <testCase name="TeamAssignComponent should not add applicant to table when selectedApplicant is falsy" duration="13"/>
    <testCase name="TeamAssignComponent should not add applicant to table when selectedApplicant is already in dataSource" duration="18"/>
    <testCase name="TeamAssignComponent should create" duration="21"/>
    <testCase name="TeamAssignComponent should call deleteRow and change validatelenght variable to false" duration="19"/>
    <testCase name="TeamAssignComponent should call deleteRow with a row not exists in the datasource" duration="21"/>
    <testCase name="TeamAssignComponent should call deleteRow and delete the row selected" duration="21"/>
    <testCase name="TeamAssignComponent should populate dataSource and dataSourceSave when teamsAssign has data" duration="23"/>
    <testCase name="TeamAssignComponent should call deleteRecord show error message when dataSource has only one item" duration="15"/>
    <testCase name="TeamAssignComponent should call deleteRow and change validatelenght variable to true" duration="18"/>
    <testCase name="TeamAssignComponent test call add to table button" duration="14"/>
    <testCase name="TeamAssignComponent test call assign applicants button" duration="10"/>
    <testCase name="TeamAssignComponent should call getApplicants getApplicant and return response success" duration="12"/>
  </file>
  <file path="src/app/conjunto-pruebas/conjunto-pruebas.service.spec.ts">
    <testCase name="ConjuntoPruebasService should handle createConjuntoPruebas failed HTTP request (status code 404)" duration="2"/>
    <testCase name="ConjuntoPruebasService should handle createConjuntoPruebas successful HTTP request (status code 200)" duration="2"/>
    <testCase name="ConjuntoPruebasService should create a conjuntoPruebas" duration="2"/>
    <testCase name="ConjuntoPruebasService should return all bancoPreguntas" duration="1"/>
    <testCase name="ConjuntoPruebasService should be created" duration="1"/>
  </file>
  <file path="src/app/agendapruebas/agenda-pruebas-create/agenda-pruebas-create.component.spec.ts">
    <testCase name="AgendaPruebasCreateComponent should return form inValid" duration="36"/>
    <testCase name="AgendaPruebasCreateComponent should call ngOnInit and call the service getAgendaPrueba" duration="12"/>
    <testCase name="AgendaPruebasCreateComponent should return form Valid" duration="23"/>
    <testCase name="AgendaPruebasCreateComponent should create" duration="12"/>
    <testCase name="AgendaPruebasCreateComponent should call getListaPruebas getListaPruebas and return response success" duration="12"/>
    <testCase name="AgendaPruebasCreateComponent should call createAgendaPrueba saveListaAgendaPrueba and return response success" duration="15"/>
    <testCase name="AgendaPruebasCreateComponent should call getListaCandidatos getListaCandidatos and return response success" duration="13"/>
    <testCase name="AgendaPruebasCreateComponent should call createAgendaPrueba agendaPruebaForm is null" duration="11"/>
    <testCase name="AgendaPruebasCreateComponent all fields empty" duration="14"/>
  </file>
  <file path="src/app/applicant-search/applicant-search-get/applicant-search-get.component.spec.ts">
    <testCase name="ApplicantSearchGetComponent should toggle selection of an applicant" duration="10"/>
    <testCase name="ApplicantSearchGetComponent should create" duration="4"/>
    <testCase name="ApplicantSearchGetComponent should initialize with empty selectedApplicants array" duration="5"/>
    <testCase name="ApplicantSearchGetComponent should call showApplicantDetails() when the &quot;Search Applicant&quot; button is clicked" duration="6"/>
    <testCase name="ApplicantSearchGetComponent should load applicants and set showApplicantInfo to true" duration="4"/>
  </file>
  <file path="src/app/login/dialogtypesignup/dialogtypesignup.component.spec.ts">
    <testCase name="DialogtypesignupComponent navigate to signup applicant page" duration="33"/>
    <testCase name="DialogtypesignupComponent should create" duration="8"/>
    <testCase name="DialogtypesignupComponent navigate to signup company page" duration="6"/>
  </file>
  <file path="src/app/test/test.service.spec.ts">
    <testCase name="Service: Test should ..." duration="2"/>
  </file>
  <file path="src/app/team/team-list/team-list.component.spec.ts">
    <testCase name="TeamListComponent should clear the teams when no project is selected" duration="12"/>
    <testCase name="TeamListComponent should call getTeamsById when a team is selected" duration="15"/>
    <testCase name="TeamListComponent should create" duration="8"/>
    <testCase name="TeamListComponent should call the method onProjectSelectionChange teamForm get project property null" duration="7"/>
    <testCase name="TeamListComponent should call getTeamsByProject when a project is selected" duration="10"/>
  </file>
  <file path="src/app/company/company.service.spec.ts">
    <testCase name="CompanyService should be created" duration="1"/>
    <testCase name="CompanyService should send a POST request to edit the company" duration="1"/>
    <testCase name="CompanyService should send a POST request to create the company" duration="1"/>
    <testCase name="CompanyService should send a GET request to get the company" duration="1"/>
  </file>
  <file path="src/app/login/login-page/login-page.component.spec.ts">
    <testCase name="LoginPageComponent should call gotoApp loginApplicant and return response failed" duration="31"/>
    <testCase name="LoginPageComponent change english language" duration="11"/>
    <testCase name="LoginPageComponent should return form Valid" duration="8"/>
    <testCase name="LoginPageComponent should call gotoApp loginApplicant and return response success" duration="14"/>
    <testCase name="LoginPageComponent should return form inValid" duration="10"/>
    <testCase name="LoginPageComponent should call open dialog and return a result" duration="12"/>
    <testCase name="LoginPageComponent go to open dialog" duration="8"/>
    <testCase name="LoginPageComponent go to app test" duration="11"/>
    <testCase name="LoginPageComponent should create" duration="7"/>
    <testCase name="LoginPageComponent password empty" duration="8"/>
    <testCase name="LoginPageComponent should call selectChangeHandler and change value of select 1" duration="12"/>
    <testCase name="LoginPageComponent should call gotoApp loginCompany and return response failed" duration="10"/>
    <testCase name="LoginPageComponent should call gotoApp loginCompany and return response success" duration="14"/>
    <testCase name="LoginPageComponent should call selectChangeHandler and change value of select 2" duration="21"/>
    <testCase name="LoginPageComponent email empty" duration="15"/>
    <testCase name="LoginPageComponent two fields empty" duration="14"/>
    <testCase name="LoginPageComponent test spanish button" duration="13"/>
    <testCase name="LoginPageComponent test english button" duration="20"/>
    <testCase name="LoginPageComponent change not language" duration="12"/>
    <testCase name="LoginPageComponent change spanish language" duration="13"/>
  </file>
  <file path="src/app/team/team.service.spec.ts">
    <testCase name="Service: TeamService should update a team" duration="3"/>
    <testCase name="Service: TeamService should handle getAllAssignTeam successful HTTP request (status code 200)" duration="2"/>
    <testCase name="Service: TeamService should get a list of teams" duration="2"/>
    <testCase name="Service: TeamService should handle createAssignTeam failed HTTP request (status code 404)" duration="2"/>
    <testCase name="Service: TeamService should delete a team" duration="2"/>
    <testCase name="Service: TeamService should create a team" duration="1"/>
    <testCase name="Service: TeamService should be created" duration="1"/>
    <testCase name="Service: TeamService should get teams by project" duration="2"/>
    <testCase name="Service: TeamService should handle deleteAssignTeam successful HTTP request (status code 204)" duration="1"/>
    <testCase name="Service: TeamService should handle deleteAssignTeam failed HTTP request (status code 404)" duration="1"/>
    <testCase name="Service: TeamService should handle createAssignTeam successful HTTP request (status code 200)" duration="1"/>
    <testCase name="Service: TeamService should handle getAllAssignTeam failed HTTP request (status code 404)" duration="1"/>
  </file>
  <file path="src/app/signup/signup-company/signup-company.component.spec.ts">
    <testCase name="SignupCompanyComponent go to open dialog failed" duration="18"/>
    <testCase name="SignupCompanyComponent registerCompany test" duration="19"/>
    <testCase name="SignupCompanyComponent should open dialog success and return response" duration="14"/>
    <testCase name="SignupCompanyComponent should call selectChangeHandler and change value of select NIT" duration="28"/>
    <testCase name="SignupCompanyComponent all fields empty" duration="21"/>
    <testCase name="SignupCompanyComponent should return form inValid" duration="21"/>
    <testCase name="SignupCompanyComponent password empty" duration="19"/>
    <testCase name="SignupCompanyComponent go to open dialog success" duration="19"/>
    <testCase name="SignupCompanyComponent email empty" duration="20"/>
    <testCase name="SignupCompanyComponent should open dialog failed and return response" duration="18"/>
    <testCase name="SignupCompanyComponent should return form Valid" duration="19"/>
    <testCase name="SignupCompanyComponent should create" duration="17"/>
    <testCase name="SignupCompanyComponent should call registerCompany createCompany and return response success" duration="22"/>
    <testCase name="SignupCompanyComponent should call registerCompany createCompany and return response failed" duration="18"/>
  </file>
  <file path="src/app/applicant/applicant.service.spec.ts">
    <testCase name="Service: Applicant should handle getSoftSkills failed HTTP request (status code 404)" duration="2"/>
    <testCase name="Service: Applicant should handle updateApplicant failed HTTP request (status code 404)" duration="1"/>
    <testCase name="Service: Applicant should handle getSoftSkills successful HTTP request (status code 200)" duration="1"/>
    <testCase name="Service: Applicant should handle getApplicant failed HTTP request (status code 404)" duration="1"/>
    <testCase name="Service: Applicant should handle getTechnicalSkills successful HTTP request (status code 200)" duration="1"/>
    <testCase name="Service: Applicant should handle updateApplicant successful HTTP request (status code 200)" duration="1"/>
    <testCase name="Service: Applicant should handle getProfessionalSkills successful HTTP request (status code 200)" duration="1"/>
    <testCase name="Service: Applicant should handle getTechnicalSkills failed HTTP request (status code 404)" duration="1"/>
    <testCase name="Service: Applicant should handle getProfessionalSkills failed HTTP request (status code 404)" duration="1"/>
    <testCase name="Service: Applicant should handle createcandidatohabilidades successful HTTP request (status code 200)" duration="1"/>
    <testCase name="Service: Applicant should handle createcandidatohabilidades failed HTTP request (status code 404)" duration="1"/>
    <testCase name="Service: Applicant should handle getcandidatohabilidadesByCandidato failed HTTP request (status code 404)" duration="1"/>
    <testCase name="Service: Applicant should handle getcandidatohabilidadesByCandidato successful HTTP request (status code 200)" duration="1"/>
    <testCase name="Service: Applicant should handle getApplicant successful HTTP request (status code 200)" duration="1"/>
    <testCase name="Service: Applicant should ..." duration="1"/>
  </file>
  <file path="src/app/applicant-search/applicant-seach.service.spec.ts">
    <testCase name="Service: ApplicantSeach should ..." duration="1"/>
  </file>
  <file path="src/app/banco-preguntas/lista-preguntas/lista-preguntas-list.component.spec.ts">
    <testCase name="ListaPreguntasListComponent should call agregarRespuesta respuesta is not undefined" duration="12"/>
    <testCase name="ListaPreguntasListComponent should call agregarPregunta and open dialog and return a result" duration="4"/>
    <testCase name="ListaPreguntasListComponent should call agregarRespuesta respuesta is undefined" duration="5"/>
    <testCase name="ListaPreguntasListComponent test button add" duration="5"/>
    <testCase name="ListaPreguntasListComponent should call getListaPreguntasBanco with bancoPreguntas null or empty" duration="10"/>
    <testCase name="ListaPreguntasListComponent should call getListaPreguntasBanco getListaPreguntasBanco and return response success" duration="7"/>
    <testCase name="ListaPreguntasListComponent should call agregarPregunta textoPregunta is not undefined" duration="5"/>
    <testCase name="ListaPreguntasListComponent should call modificarRespuesta respuesta is undefined" duration="4"/>
    <testCase name="ListaPreguntasListComponent should call modificarRespuesta and open dialog and return a result" duration="5"/>
    <testCase name="ListaPreguntasListComponent should call modificarRespuesta respuesta is not undefined" duration="10"/>
    <testCase name="ListaPreguntasListComponent should call agregarPregunta textoPregunta is undefined" duration="7"/>
    <testCase name="ListaPreguntasListComponent should create" duration="4"/>
    <testCase name="ListaPreguntasListComponent should call agregarRespuesta and open dialog and return a result" duration="5"/>
  </file>
  <file path="src/app/evaluacion-desempeno/evaluacion-desempeno-create/evaluacion-desempeno-create.component.spec.ts">
    <testCase name="EvaluacionDesempenoCreateComponent should return form Valid" duration="18"/>
    <testCase name="EvaluacionDesempenoCreateComponent should create" duration="8"/>
    <testCase name="EvaluacionDesempenoCreateComponent should call createAgendaPrueba agendaPruebaForm is null" duration="9"/>
    <testCase name="EvaluacionDesempenoCreateComponent should call getListaPruebas getListaPruebas and return response success" duration="8"/>
    <testCase name="EvaluacionDesempenoCreateComponent should call ngOnInit and call the service getAgendaPrueba" duration="10"/>
    <testCase name="EvaluacionDesempenoCreateComponent should call createAgendaPrueba saveListaAgendaPrueba and return response success" duration="8"/>
    <testCase name="EvaluacionDesempenoCreateComponent should call getListaCandidatos and return response success" duration="9"/>
    <testCase name="EvaluacionDesempenoCreateComponent should return form inValid" duration="13"/>
  </file>
  <file path="src/app/agendapruebas/agenda-prueba.service.spec.ts">
    <testCase name="Service: AgendaPrueba should handle saveListaAgendaPrueba successful HTTP request (status code 200)" duration="2"/>
    <testCase name="Service: AgendaPrueba should handle getAgendaPrueba successful HTTP request (status code 200)" duration="2"/>
    <testCase name="Service: AgendaPrueba should handle getAgendaPrueba failed HTTP request (status code 404)" duration="2"/>
    <testCase name="Service: AgendaPrueba should handle getListaAgendaPrueba successful HTTP request (status code 200)" duration="2"/>
    <testCase name="Service: AgendaPrueba should handle getListaAgendaPrueba failed HTTP request (status code 404)" duration="2"/>
    <testCase name="Service: AgendaPrueba should handle getListaCandidatos successful HTTP request (status code 200)" duration="1"/>
    <testCase name="Service: AgendaPrueba should ..." duration="2"/>
    <testCase name="Service: AgendaPrueba should handle saveListaAgendaPrueba failed HTTP request (status code 404)" duration="2"/>
    <testCase name="Service: AgendaPrueba should handle getListaCandidatos failed HTTP request (status code 404)" duration="2"/>
  </file>
  <file path="src/app/team/team-create/team-create.component.spec.ts">
    <testCase name="TeamCreateComponent should create" duration="27"/>
  </file>
  <file path="src/app/conjunto-pruebas/conjunto-pruebas-list/conjunto-pruebas-list.component.spec.ts">
    <testCase name="ConjuntoPruebasListComponent should create" duration="4"/>
  </file>
  <file path="src/app/banco-preguntas/banco-preguntas.service.spec.ts">
    <testCase name="Service: BancoPreguntas should handle getListaPruebas successful HTTP request (status code 200)" duration="3"/>
    <testCase name="Service: BancoPreguntas should handle getListaPruebas failed HTTP request (status code 404)" duration="1"/>
    <testCase name="Service: BancoPreguntas should handle createBancoPreguntas successful HTTP request (status code 200)" duration="2"/>
    <testCase name="Service: BancoPreguntas should handle createBancoPreguntas failed HTTP request (status code 404)" duration="2"/>
    <testCase name="Service: BancoPreguntas should handle getListaBancosPreguntas successful HTTP request (status code 200)" duration="3"/>
    <testCase name="Service: BancoPreguntas should handle getListaBancosPreguntas failed HTTP request (status code 404)" duration="2"/>
    <testCase name="Service: BancoPreguntas should handle getBancoPreguntas successful HTTP request (status code 200)" duration="3"/>
    <testCase name="Service: BancoPreguntas should handle getCategorias failed HTTP request (status code 404)" duration="2"/>
    <testCase name="Service: BancoPreguntas should handle createPregunta successful HTTP request (status code 200)" duration="4"/>
    <testCase name="Service: BancoPreguntas should handle getListaPreguntasBanco successful HTTP request (status code 200)" duration="2"/>
    <testCase name="Service: BancoPreguntas should handle createRespuesta successful HTTP request (status code 200)" duration="2"/>
    <testCase name="Service: BancoPreguntas should handle getBancoPreguntas failed HTTP request (status code 404)" duration="2"/>
    <testCase name="Service: BancoPreguntas should handle createRespuesta failed HTTP request (status code 404)" duration="2"/>
    <testCase name="Service: BancoPreguntas should handle getCategorias successful HTTP request (status code 200)" duration="2"/>
    <testCase name="Service: BancoPreguntas should have bancoPreguntasCreated status true" duration="2"/>
    <testCase name="Service: BancoPreguntas should ..." duration="2"/>
    <testCase name="Service: BancoPreguntas should handle createPregunta failed HTTP request (status code 404)" duration="2"/>
    <testCase name="Service: BancoPreguntas should handle getListaPreguntasBanco failed HTTP request (status code 404)" duration="2"/>
  </file>
  <file path="src/app/project/project-list/project-list.component.spec.ts">
    <testCase name="ProjectListComponent should call the method toggleEdit with the project.editable property true" duration="9"/>
    <testCase name="ProjectListComponent should call the method toggleEdit with the project.editable property false" duration="8"/>
    <testCase name="ProjectListComponent should create" duration="12"/>
  </file>
  <file path="src/app/banco-preguntas/categorias-list/categorias-list.component.spec.ts">
    <testCase name="CategoriasListComponent should create" duration="7"/>
    <testCase name="CategoriasListComponent should call getListaCategorias getCategorias and return response success" duration="4"/>
    <testCase name="CategoriasListComponent should set idCategoriaSeleccionada and emit categoriaSeleccionada event" duration="3"/>
    <testCase name="CategoriasListComponent should call getListaCategorias getCategorias and return response success html" duration="4"/>
  </file>
  <file path="src/app/app.component.spec.ts">
    <testCase name="AppComponent should contain router-outlet" duration="16"/>
    <testCase name="AppComponent should have as title 'frontabc-front'" duration="4"/>
    <testCase name="AppComponent should create the app" duration="4"/>
    <testCase name="AppComponent navigate to signup company page" duration="12"/>
    <testCase name="AppComponent navigate to login page" duration="5"/>
    <testCase name="AppComponent navigate to principal page" duration="10"/>
    <testCase name="AppComponent change spanish language" duration="5"/>
    <testCase name="AppComponent should navigate to principal page without token and return to login page" duration="5"/>
    <testCase name="AppComponent change not language" duration="5"/>
    <testCase name="AppComponent test english button" duration="35"/>
    <testCase name="AppComponent navigate to root" duration="6"/>
    <testCase name="AppComponent test spanish button" duration="21"/>
    <testCase name="AppComponent change english language" duration="5"/>
    <testCase name="AppComponent navigate to signup applicant page" duration="8"/>
  </file>
  <file path="src/app/banco-preguntas/modal-respuestas-save/modal-respuestas-save.component.spec.ts">
    <testCase name="ModalRespuestasSaveComponent should return form inValid null values" duration="13"/>
    <testCase name="ModalRespuestasSaveComponent should create" duration="10"/>
    <testCase name="ModalRespuestasSaveComponent should return form Valid" duration="6"/>
    <testCase name="ModalRespuestasSaveComponent should return form inValid" duration="6"/>
    <testCase name="ModalRespuestasSaveComponent all fields empty" duration="6"/>
    <testCase name="ModalRespuestasSaveComponent should close the dialog when onNoClick() is called" duration="7"/>
    <testCase name="ModalRespuestasSaveComponent should call retornarRespuesta respuesta undefined" duration="6"/>
    <testCase name="ModalRespuestasSaveComponent should call retornarRespuesta respuesta not undefined" duration="6"/>
  </file>
  <file path="src/app/evaluacion-desempeno/resultados-pruebas-create/resultados-pruebas-create.component.spec.ts">
    <testCase name="ResultadosPruebasCreateComponent should call getPrueba and return response success" duration="10"/>
    <testCase name="ResultadosPruebasCreateComponent should call ngOnInit and call the service getAgendaPrueba" duration="5"/>
    <testCase name="ResultadosPruebasCreateComponent should create" duration="6"/>
    <testCase name="ResultadosPruebasCreateComponent should call getPrueba " duration="6"/>
    <testCase name="ResultadosPruebasCreateComponent should call getCandidato and return response success" duration="5"/>
    <testCase name="ResultadosPruebasCreateComponent should call setRespuesta and return response success" duration="5"/>
  </file>
  <file path="src/app/signup/dialogalertopappli/dialogalertopappli.component.spec.ts">
    <testCase name="DialogalertopappliComponent navigate to login page dialog 2 failed" duration="7"/>
    <testCase name="DialogalertopappliComponent should create" duration="5"/>
    <testCase name="DialogalertopappliComponent navigate to login page dialog 1 success" duration="4"/>
  </file>
  <file path="src/app/banco-preguntas/modal-preguntas-save/modal-preguntas-save.component.spec.ts">
    <testCase name="ModalPreguntasSaveComponent should return form inValid" duration="8"/>
    <testCase name="ModalPreguntasSaveComponent test call cancel button" duration="6"/>
    <testCase name="ModalPreguntasSaveComponent should close the dialog when onNoClick() is called" duration="10"/>
    <testCase name="ModalPreguntasSaveComponent should call createPregunta createPregunta and return response success" duration="6"/>
    <testCase name="ModalPreguntasSaveComponent should create" duration="11"/>
    <testCase name="ModalPreguntasSaveComponent should return form Valid" duration="6"/>
  </file>
  <file path="src/app/evaluacion-desempeno/evaluacion-desempeno-list/evaluacion-desempeno-list.component.spec.ts">
    <testCase name="EvaluacionDesempenoListComponent should call getListaPreguntas getListaAgendaPrueba and return response success" duration="16"/>
    <testCase name="EvaluacionDesempenoListComponent should create" duration="7"/>
  </file>
  <file path="src/app/agendapruebas/agenda-pruebas-list/agenda-pruebas-list.component.spec.ts">
    <testCase name="AgendaPruebasListComponent should create" duration="9"/>
    <testCase name="AgendaPruebasListComponent should call getListaPreguntas getListaAgendaPrueba and return response success" duration="8"/>
  </file>
  <file path="src/app/interceptors/interceptor-errors.service.spec.ts">
    <testCase name="InterceptorsServiceService should intercept and handle server-side error" duration="5"/>
    <testCase name="InterceptorsServiceService should intercept and handle client-side error" duration="3"/>
    <testCase name="InterceptorsServiceService should be created" duration="2"/>
  </file>
  <file path="src/app/signup/dialogalertopcomp/dialogalertopcomp.component.spec.ts">
    <testCase name="DialogalertopcompComponent navigate to login page dialog 2 failed" duration="9"/>
    <testCase name="DialogalertopcompComponent should create" duration="5"/>
    <testCase name="DialogalertopcompComponent navigate to login page dialog 1 success" duration="9"/>
  </file>
  <file path="src/app/applicant/applicant-edit/applicant-edit.component.spec.ts">
    <testCase name="ApplicantEditComponent should call getApplicant getApplicant and return response success" duration="73"/>
    <testCase name="ApplicantEditComponent should create" duration="13"/>
    <testCase name="ApplicantEditComponent should call selectChangeHandler and change value of select 2" duration="13"/>
  </file>
  <file path="src/app/applicant/applicant-skills/applicant-skills.component.spec.ts">
    <testCase name="ApplicantSkillsComponent should response true value for check valid" duration="15"/>
    <testCase name="ApplicantSkillsComponent should enabled button with the skills list fill" duration="6"/>
    <testCase name="ApplicantSkillsComponent should disabled button with the skills list empty" duration="6"/>
    <testCase name="ApplicantSkillsComponent should create" duration="6"/>
    <testCase name="ApplicantSkillsComponent should call getSkills getTechnicalSkills and return response success" duration="16"/>
    <testCase name="ApplicantSkillsComponent should call getSkills getSoftSkills and return response success" duration="8"/>
    <testCase name="ApplicantSkillsComponent should call getSkills getProfessionalSkills and return response success" duration="7"/>
    <testCase name="ApplicantSkillsComponent should call getSaveSkills getcandidatohabilidadesByCandidato and return response success" duration="17"/>
    <testCase name="ApplicantSkillsComponent should response true value for check valid" duration="14"/>
    <testCase name="ApplicantSkillsComponent should call saveSkills and return response success" duration="16"/>
    <testCase name="ApplicantSkillsComponent should call getApplicant getApplicant and return response success" duration="15"/>
  </file>
  <file path="src/app/signup/signup-applicant/signup-applicant.component.spec.ts">
    <testCase name="SignupApplicantComponent password empty" duration="28"/>
    <testCase name="SignupApplicantComponent registerApplicant test" duration="27"/>
    <testCase name="SignupApplicantComponent should call selectChangeHandler and change value of select C.C." duration="39"/>
    <testCase name="SignupApplicantComponent should call selectChangeHandler and change value of select C.E." duration="28"/>
    <testCase name="SignupApplicantComponent all fields empty" duration="16"/>
    <testCase name="SignupApplicantComponent email empty" duration="16"/>
    <testCase name="SignupApplicantComponent should call registerApplicant createApplicant and return response success" duration="22"/>
    <testCase name="SignupApplicantComponent should open dialog failed and return response" duration="14"/>
    <testCase name="SignupApplicantComponent should call registerApplicant createApplicant and return response failed" duration="21"/>
    <testCase name="SignupApplicantComponent should create" duration="12"/>
    <testCase name="SignupApplicantComponent go to open dialog success" duration="14"/>
    <testCase name="SignupApplicantComponent go to open dialog failed" duration="14"/>
    <testCase name="SignupApplicantComponent should return form Valid" duration="16"/>
    <testCase name="SignupApplicantComponent should open dialog success and return response" duration="17"/>
    <testCase name="SignupApplicantComponent should return form inValid" duration="14"/>
  </file>
  <file path="src/app/evaluacion-desempeno/resultados-pruebas-create/resultados-pruebas-create.component.spec.ts">
    <testCase name="ResultadosPruebasCreateComponent should call ngOnInit and call the service getAgendaPrueba" duration="10"/>
    <testCase name="ResultadosPruebasCreateComponent should call getPrueba and return response success" duration="5"/>
    <testCase name="ResultadosPruebasCreateComponent should call setRespuesta and return response failed by nulls" duration="8"/>
    <testCase name="ResultadosPruebasCreateComponent should create" duration="6"/>
    <testCase name="ResultadosPruebasCreateComponent should call getCandidato and return response success" duration="7"/>
    <testCase name="ResultadosPruebasCreateComponent should call setRespuesta and return response success" duration="11"/>
  </file>
  <file path="src/app/banco-preguntas/banco-preguntas-list/banco-preguntas-list.component.spec.ts">
    <testCase name="BancoPreguntasListComponent should call getListaPreguntas getListaBancosPreguntas and return response success html" duration="7"/>
    <testCase name="BancoPreguntasListComponent should create" duration="4"/>
    <testCase name="BancoPreguntasListComponent should call getListaPreguntas getListaBancosPreguntas and return response success" duration="6"/>
    <testCase name="BancoPreguntasListComponent should call getListaPreguntas getListaBancosPreguntas with idCategoriaSeleccionada null" duration="7"/>
    <testCase name="BancoPreguntasListComponent should call categoriaSeleccionada and fill the value nombreCategoriaSeleccionada" duration="5"/>
    <testCase name="BancoPreguntasListComponent should call categoriaSeleccionada and fill the value nombreCategoriaSeleccionada html" duration="6"/>
  </file>
  <file path="src/app/project/project-create/project-create.component.spec.ts">
    <testCase name="ProjectCreateComponent should check if form is invalid" duration="13"/>
    <testCase name="ProjectCreateComponent should not call createProject when form is valid" duration="9"/>
    <testCase name="ProjectCreateComponent should initialize the projectForm" duration="9"/>
    <testCase name="ProjectCreateComponent should create" duration="10"/>
    <testCase name="ProjectCreateComponent should not call createProject when form is invalid" duration="9"/>
    <testCase name="ProjectCreateComponent should check if form is valid" duration="12"/>
  </file>
  <file path="src/app/banco-preguntas/banco-preguntas-create/banco-preguntas-create.component.spec.ts">
    <testCase name="BancoPreguntasCreateComponent should return form inValid min lenght value" duration="10"/>
    <testCase name="BancoPreguntasCreateComponent should call ngOnInit bancoPreguntasId is not null" duration="7"/>
    <testCase name="BancoPreguntasCreateComponent should create" duration="5"/>
    <testCase name="BancoPreguntasCreateComponent should call createBancoPreguntas createBancoPreguntas and return response success" duration="7"/>
    <testCase name="BancoPreguntasCreateComponent createBancoPreguntas test" duration="5"/>
    <testCase name="BancoPreguntasCreateComponent should call ngOnInit bancoPreguntasId is null" duration="5"/>
    <testCase name="BancoPreguntasCreateComponent should call getListaCategorias getCategorias and return response success" duration="5"/>
    <testCase name="BancoPreguntasCreateComponent should call cancelCreation and reset the form" duration="5"/>
    <testCase name="BancoPreguntasCreateComponent should return form inValid" duration="8"/>
    <testCase name="BancoPreguntasCreateComponent should return form Valid" duration="5"/>
    <testCase name="BancoPreguntasCreateComponent should all fields empty" duration="6"/>
  </file>
  <file path="src/app/company/company-edit/company-edit.component.spec.ts">
    <testCase name="CompanyEditComponent should set selectedtypeNIT on selectChangeHandler" duration="9"/>
    <testCase name="CompanyEditComponent should create" duration="6"/>
    <testCase name="CompanyEditComponent should update form data when a new company is received" duration="6"/>
    <testCase name="CompanyEditComponent should initialize companyRForm" duration="6"/>
    <testCase name="CompanyEditComponent should update selectedtypeNIT on selectChangeHandler" duration="6"/>
  </file>
  <file path="src/app/login/logout-page/logout-page.component.spec.ts">
    <testCase name="LogoutPageComponent should create" duration="6"/>
    <testCase name="LogoutPageComponent should " duration="5"/>
  </file>
  <file path="src/app/signup/signup.service.spec.ts">
    <testCase name="Service: Signup should handle createCompany failed HTTP request (status code 404)" duration="1"/>
    <testCase name="Service: Signup should handle createCompany successful HTTP request (status code 200)" duration="1"/>
    <testCase name="Service: Signup should handle createApplicant failed HTTP request (status code 404)" duration="1"/>
    <testCase name="Service: Signup should handle createApplicant successful HTTP request (status code 200)" duration="1"/>
    <testCase name="Service: Signup should ..." duration="1"/>
  </file>
  <file path="src/app/project/project.service.spec.ts">
    <testCase name="Service: Project should get all projects" duration="2"/>
    <testCase name="Service: Project should update a project" duration="2"/>
    <testCase name="Service: Project should be created" duration="1"/>
    <testCase name="Service: Project should create a project" duration="1"/>
    <testCase name="Service: Project should handle HTTP errors when creating a project" duration="1"/>
    <testCase name="Service: Project should ..." duration="1"/>
  </file>
  <file path="src/app/principal/principal-page/principal-page.component.spec.ts">
    <testCase name="PrincipalPageComponent should call ngoninit null isCandidato false" duration="7"/>
    <testCase name="PrincipalPageComponent should call getApplicantSkills getApplicantSkills and return response success" duration="6"/>
    <testCase name="PrincipalPageComponent should call ngoninit not null isCandidato true" duration="4"/>
    <testCase name="PrincipalPageComponent should call getApplicantSkills getApplicantSkills and return response empty" duration="179"/>
    <testCase name="PrincipalPageComponent should call getPruebasCandidato getPruebasCandidato and return response success" duration="4"/>
    <testCase name="PrincipalPageComponent should create" duration="3"/>
  </file>
  <file path="src/app/profile/profile-create/profile-create.component.spec.ts">
    <testCase name="ProfileCreateComponent should create" duration="9"/>
    <testCase name="ProfileCreateComponent should return form inValid min lenght value" duration="5"/>
    <testCase name="ProfileCreateComponent should return form inValid" duration="6"/>
    <testCase name="ProfileCreateComponent should return form Valid" duration="5"/>
    <testCase name="ProfileCreateComponent createProfile test" duration="7"/>
    <testCase name="ProfileCreateComponent should call createProfile createProfile and return response success" duration="5"/>
  </file>
  <file path="src/app/profile/profile.service.spec.ts">
    <testCase name="Service: Profile should ..." duration="2"/>
  </file>
  <file path="src/app/test/test-take/test-take.component.spec.ts">
    <testCase name="TestTakeComponent should invoke the method isButtonDisabled and disabled false" duration="9"/>
    <testCase name="TestTakeComponent should create" duration="3"/>
    <testCase name="TestTakeComponent should invoke the method isButtonEndDisabled and disabled false" duration="3"/>
    <testCase name="TestTakeComponent should invoke the method isButtonDisabled and disabled true" duration="4"/>
    <testCase name="TestTakeComponent should invoke the method isButtonEndDisabled and disabled true" duration="3"/>
  </file>
  <file path="src/app/login/login.service.spec.ts">
    <testCase name="Service: Login should handle loginCompany successful HTTP request (status code 200)" duration="3"/>
    <testCase name="Service: Login should handle loginApplicant failed HTTP request (status code 404)" duration="1"/>
    <testCase name="Service: Login should handle loginCompany failed HTTP request (status code 404)" duration="1"/>
    <testCase name="Service: Login should handle loginApplicant successful HTTP request (status code 200)" duration="1"/>
    <testCase name="Service: Login should ..." duration="3"/>
  </file>
  <file path="src/app/principal/dialogapplicantskills/dialogapplicantskills.component.spec.ts">
    <testCase name="DialogapplicantskillsComponent should create" duration="3"/>
  </file>
  <file path="src/app/principal/principal.service.spec.ts">
    <testCase name="Service: Principal should handle getApplicantSkills successful HTTP request (status code 200)" duration="1"/>
    <testCase name="Service: Principal should handle getPruebasCandidato failed HTTP request (status code 404)" duration="1"/>
    <testCase name="Service: Principal should ..." duration="1"/>
    <testCase name="Service: Principal should handle getApplicantSkills failed HTTP request (status code 404)" duration="1"/>
    <testCase name="Service: Principal should handle getPruebasCandidato successful HTTP request (status code 200)" duration="1"/>
>>>>>>> develop
  </file>
</testExecutions>